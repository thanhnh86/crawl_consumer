{"version":3,"sources":["../../src/types.ts"],"sourcesContent":["/*\n * @adonisjs/cache\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport * from 'bentocache/types'\n\nimport type { BentoCache, bentostore } from 'bentocache'\nimport type { RawBentoCacheOptions } from 'bentocache/types'\n\nimport type { store } from './store.js'\n\n/**\n * The options accepted by the cache module\n */\nexport type CacheOptions = Omit<RawBentoCacheOptions, 'logger' | 'emitter'>\n\n/**\n * Infer the stores from the user config\n */\nexport type InferStores<T extends { stores: Record<string, ReturnType<typeof store>> }> = {\n  [K in keyof T['stores']]: any\n}\n\n/**\n * A list of known caches stores inferred from the user config\n * This interface must be extended in user-land\n */\nexport interface CacheStores {}\n\n/**\n * The cache service interface registered with the container\n */\nexport interface CacheService\n  extends BentoCache<\n    CacheStores extends Record<string, ReturnType<typeof bentostore>> ? CacheStores : never\n  > {}\n"],"mappings":";AASA,cAAc;","names":[]}