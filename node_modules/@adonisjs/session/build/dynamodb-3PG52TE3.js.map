{"version":3,"sources":["../src/stores/dynamodb.ts"],"sourcesContent":["/**\n * @adonisjs/session\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport string from '@poppinss/utils/string'\nimport { MessageBuilder } from '@adonisjs/core/helpers'\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb'\nimport {\n  DynamoDBClient,\n  GetItemCommand,\n  PutItemCommand,\n  DeleteItemCommand,\n  UpdateItemCommand,\n} from '@aws-sdk/client-dynamodb'\n\nimport debug from '../debug.js'\nimport type { SessionStoreContract, SessionData } from '../types.js'\n\n/**\n * DynamoDB store to read/write session to DynamoDB\n */\nexport class DynamoDBStore implements SessionStoreContract {\n  #client: DynamoDBClient\n  #tableName: string\n  #keyAttribute: string\n  #ttlSeconds: number\n  #valueAttribute: string = 'value'\n  #expiresAtAttribute: string = 'expires_at'\n\n  constructor(\n    client: DynamoDBClient,\n    age: string | number,\n    options?: {\n      /**\n       * Defaults to \"Session\"\n       */\n      tableName?: string\n\n      /**\n       * Defaults to \"key\"\n       */\n      keyAttribute?: string\n    }\n  ) {\n    this.#client = client\n    this.#tableName = options?.tableName ?? 'Session'\n    this.#keyAttribute = options?.keyAttribute ?? 'key'\n    this.#ttlSeconds = string.seconds.parse(age)\n    debug('initiating dynamodb store')\n  }\n\n  /**\n   * Returns session data. A new item will be created if it's\n   * missing.\n   */\n  async read(sessionId: string): Promise<SessionData | null> {\n    debug('dynamodb store: reading session data %s', sessionId)\n\n    const command = new GetItemCommand({\n      TableName: this.#tableName,\n      Key: marshall({ [this.#keyAttribute]: sessionId }),\n    })\n\n    const response = await this.#client.send(command)\n    if (!response.Item) {\n      return null\n    }\n\n    if (!response.Item[this.#valueAttribute]) {\n      return null\n    }\n\n    const item = unmarshall(response.Item)\n    const contents = item[this.#valueAttribute] as string\n    const expiresAt = item[this.#expiresAtAttribute] as number\n\n    /**\n     * Check if the item has been expired and return null (if expired)\n     */\n    if (Date.now() > expiresAt) {\n      return null\n    }\n\n    /**\n     * Verify contents with the session id and return them as an object. The verify\n     * method can fail when the contents is not JSON.\n     */\n    try {\n      return new MessageBuilder().verify<SessionData>(contents, sessionId)\n    } catch {\n      return null\n    }\n  }\n\n  /**\n   * Write session values to DynamoDB\n   */\n  async write(sessionId: string, values: Object): Promise<void> {\n    debug('dynamodb store: writing session data %s, %O', sessionId, values)\n\n    const message = new MessageBuilder().build(values, undefined, sessionId)\n    const command = new PutItemCommand({\n      TableName: this.#tableName,\n      Item: marshall({\n        [this.#keyAttribute]: sessionId,\n        [this.#valueAttribute]: message,\n        [this.#expiresAtAttribute]: Date.now() + this.#ttlSeconds * 1000,\n      }),\n    })\n\n    await this.#client.send(command)\n  }\n\n  /**\n   * Cleanup session item by removing it\n   */\n  async destroy(sessionId: string): Promise<void> {\n    debug('dynamodb store: destroying session data %s', sessionId)\n\n    const command = new DeleteItemCommand({\n      TableName: this.#tableName,\n      Key: marshall({ [this.#keyAttribute]: sessionId }),\n    })\n\n    await this.#client.send(command)\n  }\n\n  /**\n   * Updates the value expiry\n   */\n  async touch(sessionId: string): Promise<void> {\n    debug('dynamodb store: touching session data %s', sessionId)\n\n    const command = new UpdateItemCommand({\n      TableName: this.#tableName,\n      Key: marshall({ [this.#keyAttribute]: sessionId }),\n      UpdateExpression: 'SET #expires_at = :expires_at',\n      ExpressionAttributeNames: {\n        '#expires_at': this.#expiresAtAttribute,\n      },\n      ExpressionAttributeValues: marshall({\n        ':expires_at': Date.now() + this.#ttlSeconds * 1000,\n      }),\n    })\n\n    await this.#client.send(command)\n  }\n}\n"],"mappings":";;;;;AASA,OAAO,YAAY;AACnB,SAAS,sBAAsB;AAC/B,SAAS,UAAU,kBAAkB;AACrC;AAAA,EAEE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAQA,IAAM,gBAAN,MAAoD;AAAA,EACzD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAA0B;AAAA,EAC1B,sBAA8B;AAAA,EAE9B,YACE,QACA,KACA,SAWA;AACA,SAAK,UAAU;AACf,SAAK,aAAa,SAAS,aAAa;AACxC,SAAK,gBAAgB,SAAS,gBAAgB;AAC9C,SAAK,cAAc,OAAO,QAAQ,MAAM,GAAG;AAC3C,kBAAM,2BAA2B;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,KAAK,WAAgD;AACzD,kBAAM,2CAA2C,SAAS;AAE1D,UAAM,UAAU,IAAI,eAAe;AAAA,MACjC,WAAW,KAAK;AAAA,MAChB,KAAK,SAAS,EAAE,CAAC,KAAK,aAAa,GAAG,UAAU,CAAC;AAAA,IACnD,CAAC;AAED,UAAM,WAAW,MAAM,KAAK,QAAQ,KAAK,OAAO;AAChD,QAAI,CAAC,SAAS,MAAM;AAClB,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,SAAS,KAAK,KAAK,eAAe,GAAG;AACxC,aAAO;AAAA,IACT;AAEA,UAAM,OAAO,WAAW,SAAS,IAAI;AACrC,UAAM,WAAW,KAAK,KAAK,eAAe;AAC1C,UAAM,YAAY,KAAK,KAAK,mBAAmB;AAK/C,QAAI,KAAK,IAAI,IAAI,WAAW;AAC1B,aAAO;AAAA,IACT;AAMA,QAAI;AACF,aAAO,IAAI,eAAe,EAAE,OAAoB,UAAU,SAAS;AAAA,IACrE,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,MAAM,WAAmB,QAA+B;AAC5D,kBAAM,+CAA+C,WAAW,MAAM;AAEtE,UAAM,UAAU,IAAI,eAAe,EAAE,MAAM,QAAQ,QAAW,SAAS;AACvE,UAAM,UAAU,IAAI,eAAe;AAAA,MACjC,WAAW,KAAK;AAAA,MAChB,MAAM,SAAS;AAAA,QACb,CAAC,KAAK,aAAa,GAAG;AAAA,QACtB,CAAC,KAAK,eAAe,GAAG;AAAA,QACxB,CAAC,KAAK,mBAAmB,GAAG,KAAK,IAAI,IAAI,KAAK,cAAc;AAAA,MAC9D,CAAC;AAAA,IACH,CAAC;AAED,UAAM,KAAK,QAAQ,KAAK,OAAO;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QAAQ,WAAkC;AAC9C,kBAAM,8CAA8C,SAAS;AAE7D,UAAM,UAAU,IAAI,kBAAkB;AAAA,MACpC,WAAW,KAAK;AAAA,MAChB,KAAK,SAAS,EAAE,CAAC,KAAK,aAAa,GAAG,UAAU,CAAC;AAAA,IACnD,CAAC;AAED,UAAM,KAAK,QAAQ,KAAK,OAAO;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,MAAM,WAAkC;AAC5C,kBAAM,4CAA4C,SAAS;AAE3D,UAAM,UAAU,IAAI,kBAAkB;AAAA,MACpC,WAAW,KAAK;AAAA,MAChB,KAAK,SAAS,EAAE,CAAC,KAAK,aAAa,GAAG,UAAU,CAAC;AAAA,MACjD,kBAAkB;AAAA,MAClB,0BAA0B;AAAA,QACxB,eAAe,KAAK;AAAA,MACtB;AAAA,MACA,2BAA2B,SAAS;AAAA,QAClC,eAAe,KAAK,IAAI,IAAI,KAAK,cAAc;AAAA,MACjD,CAAC;AAAA,IACH,CAAC;AAED,UAAM,KAAK,QAAQ,KAAK,OAAO;AAAA,EACjC;AACF;","names":[]}